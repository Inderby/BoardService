debug: false
management.endpoints.web.exposure.include: "*" # Spring Actuator를 통해 분석되는 감춰진 모든 endpoint를 볼 수 있게 해주는 설정
logging:
  level:
    com.example.boardservice: debug
    org.springframework.web.servlet: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace # jpa 기술을 사용할 때 Query로그를 디버그 로그로 관찰 할 수 있는데. 그때 물음표로 나오는 값들을 실제 값으로 추적 해주는 설넥

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/board
    username: inderby
    password: aksen8253?
    driverClassName: com.mysql.cj.jdbc.Driver
  jpa:
    defer-datasource-initialization: true #data.sql을 이용해 초기 데이터를 받아올 것인지에 대한 설정
    hibernate.ddl-auto: create # entity를 보고 database schema를 알아서 만들어줄 것인지에 대한 설정
    #open-in-view: false
    show-sql: true
    properties:
      hibernate.format_sql: true
      hibernate.default_batch_fetch_size: 100
  h2.console.enabled: false
  sql.init.mode: always #data.sql을 언제 작동시킬 것인지에 대한 설정

---
spring:
  config.activate.on-profile: testdb
  datasource:
    url: jdbc:h2:mem:board;mode=mysql
    driverClassName: org.h2.Driver
  sql.init.mode: always;
  test.database.replace: none #해당 속성을 써주지 않는다면 @DataJpaTest를 활용한 test 환경에서 testdb를 사용하도록 지정하여도 개발자가 지정한 설정들을 무시하고 test용 db를 자체적으로 생성한다.
